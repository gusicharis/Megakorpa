//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Megakorpa_servis
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class megakorpaEntities : DbContext
    {
        public megakorpaEntities()
            : base("name=megakorpaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Drzava> Drzavas { get; set; }
        public virtual DbSet<Grad> Grads { get; set; }
        public virtual DbSet<Narudzba> Narudzbas { get; set; }
        public virtual DbSet<NarudzbaProizvod> NarudzbaProizvods { get; set; }
        public virtual DbSet<Proizvod> Proizvods { get; set; }
        public virtual DbSet<Proizvodjac> Proizvodjacs { get; set; }
        public virtual DbSet<RadnoMjesto> RadnoMjestoes { get; set; }
        public virtual DbSet<VrstaProizvoda> VrstaProizvodas { get; set; }
        public virtual DbSet<Zaposlenik> Zaposleniks { get; set; }
    
        public virtual ObjectResult<megakorpa_Narudzba_Prikaz_Result> megakorpa_Narudzba_Prikaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_Narudzba_Prikaz_Result>("megakorpa_Narudzba_Prikaz");
        }
    
        public virtual ObjectResult<megakorpa_Zaposlenik_Login_Result> megakorpa_Zaposlenik_Login(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_Zaposlenik_Login_Result>("megakorpa_Zaposlenik_Login", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Zaposlenik> megakorpa_Zaposlenik_Prijava(string korisnickoIme, string lozinka)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("Lozinka", lozinka) :
                new ObjectParameter("Lozinka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenik>("megakorpa_Zaposlenik_Prijava", korisnickoImeParameter, lozinkaParameter);
        }
    
        public virtual ObjectResult<Zaposlenik> megakorpa_Zaposlenik_Prijava(string korisnickoIme, string lozinka, MergeOption mergeOption)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("Lozinka", lozinka) :
                new ObjectParameter("Lozinka", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenik>("megakorpa_Zaposlenik_Prijava", mergeOption, korisnickoImeParameter, lozinkaParameter);
        }
    
        public virtual ObjectResult<RadnoMjesto> megakorpa_RadnoMjesto_Provjera(Nullable<int> radnoMjestoID)
        {
            var radnoMjestoIDParameter = radnoMjestoID.HasValue ?
                new ObjectParameter("RadnoMjestoID", radnoMjestoID) :
                new ObjectParameter("RadnoMjestoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RadnoMjesto>("megakorpa_RadnoMjesto_Provjera", radnoMjestoIDParameter);
        }
    
        public virtual ObjectResult<RadnoMjesto> megakorpa_RadnoMjesto_Provjera(Nullable<int> radnoMjestoID, MergeOption mergeOption)
        {
            var radnoMjestoIDParameter = radnoMjestoID.HasValue ?
                new ObjectParameter("RadnoMjestoID", radnoMjestoID) :
                new ObjectParameter("RadnoMjestoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RadnoMjesto>("megakorpa_RadnoMjesto_Provjera", mergeOption, radnoMjestoIDParameter);
        }
    
        public virtual ObjectResult<Drzava> megakorpa_Drzava_Prikaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("megakorpa_Drzava_Prikaz");
        }
    
        public virtual ObjectResult<Drzava> megakorpa_Drzava_Prikaz(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("megakorpa_Drzava_Prikaz", mergeOption);
        }
    
        public virtual ObjectResult<Drzava> megakorpa_Drzava_PrikazByDrzavaID(string drzavaID)
        {
            var drzavaIDParameter = drzavaID != null ?
                new ObjectParameter("DrzavaID", drzavaID) :
                new ObjectParameter("DrzavaID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("megakorpa_Drzava_PrikazByDrzavaID", drzavaIDParameter);
        }
    
        public virtual ObjectResult<Drzava> megakorpa_Drzava_PrikazByDrzavaID(string drzavaID, MergeOption mergeOption)
        {
            var drzavaIDParameter = drzavaID != null ?
                new ObjectParameter("DrzavaID", drzavaID) :
                new ObjectParameter("DrzavaID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("megakorpa_Drzava_PrikazByDrzavaID", mergeOption, drzavaIDParameter);
        }
    
        public virtual ObjectResult<Grad> megakorpa_Grad_Prikaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Grad>("megakorpa_Grad_Prikaz");
        }
    
        public virtual ObjectResult<Grad> megakorpa_Grad_Prikaz(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Grad>("megakorpa_Grad_Prikaz", mergeOption);
        }
    
        public virtual ObjectResult<Grad> megakorpa_Grad_PrikazByDrzavaID(string drzavaID)
        {
            var drzavaIDParameter = drzavaID != null ?
                new ObjectParameter("DrzavaID", drzavaID) :
                new ObjectParameter("DrzavaID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Grad>("megakorpa_Grad_PrikazByDrzavaID", drzavaIDParameter);
        }
    
        public virtual ObjectResult<Grad> megakorpa_Grad_PrikazByDrzavaID(string drzavaID, MergeOption mergeOption)
        {
            var drzavaIDParameter = drzavaID != null ?
                new ObjectParameter("DrzavaID", drzavaID) :
                new ObjectParameter("DrzavaID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Grad>("megakorpa_Grad_PrikazByDrzavaID", mergeOption, drzavaIDParameter);
        }
    
        public virtual ObjectResult<RadnoMjesto> megakorpa_RadnoMjesto_Prikaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RadnoMjesto>("megakorpa_RadnoMjesto_Prikaz");
        }
    
        public virtual ObjectResult<RadnoMjesto> megakorpa_RadnoMjesto_Prikaz(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RadnoMjesto>("megakorpa_RadnoMjesto_Prikaz", mergeOption);
        }
    
        public virtual ObjectResult<VrstaProizvoda> megakorpa_VrstaProizvoda_Prikaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VrstaProizvoda>("megakorpa_VrstaProizvoda_Prikaz");
        }
    
        public virtual ObjectResult<VrstaProizvoda> megakorpa_VrstaProizvoda_Prikaz(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VrstaProizvoda>("megakorpa_VrstaProizvoda_Prikaz", mergeOption);
        }
    
        public virtual ObjectResult<Zaposlenik> megakorpa_Zaposlenik_Prikaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenik>("megakorpa_Zaposlenik_Prikaz");
        }
    
        public virtual ObjectResult<Zaposlenik> megakorpa_Zaposlenik_Prikaz(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenik>("megakorpa_Zaposlenik_Prikaz", mergeOption);
        }
    
        public virtual ObjectResult<megakorpa_Zaposlenik_cmbxPrikaz_Result> megakorpa_Zaposlenik_cmbxPrikaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_Zaposlenik_cmbxPrikaz_Result>("megakorpa_Zaposlenik_cmbxPrikaz");
        }
    
        public virtual ObjectResult<megakorpa_Zaposlenik_PrikazForcmbx_Result> megakorpa_Zaposlenik_PrikazForcmbx()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_Zaposlenik_PrikazForcmbx_Result>("megakorpa_Zaposlenik_PrikazForcmbx");
        }
    
        public virtual int megakorpa_Narudzba_Insert(Nullable<int> zaposlenikID, Nullable<System.DateTime> datumNarudzbe, Nullable<System.TimeSpan> vrijemeNarudzbe, string ime, string prezime, string telefon, string adresa, Nullable<int> gradID, string napomene, Nullable<bool> dostavljeno)
        {
            var zaposlenikIDParameter = zaposlenikID.HasValue ?
                new ObjectParameter("ZaposlenikID", zaposlenikID) :
                new ObjectParameter("ZaposlenikID", typeof(int));
    
            var datumNarudzbeParameter = datumNarudzbe.HasValue ?
                new ObjectParameter("DatumNarudzbe", datumNarudzbe) :
                new ObjectParameter("DatumNarudzbe", typeof(System.DateTime));
    
            var vrijemeNarudzbeParameter = vrijemeNarudzbe.HasValue ?
                new ObjectParameter("VrijemeNarudzbe", vrijemeNarudzbe) :
                new ObjectParameter("VrijemeNarudzbe", typeof(System.TimeSpan));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            var napomeneParameter = napomene != null ?
                new ObjectParameter("Napomene", napomene) :
                new ObjectParameter("Napomene", typeof(string));
    
            var dostavljenoParameter = dostavljeno.HasValue ?
                new ObjectParameter("Dostavljeno", dostavljeno) :
                new ObjectParameter("Dostavljeno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_Narudzba_Insert", zaposlenikIDParameter, datumNarudzbeParameter, vrijemeNarudzbeParameter, imeParameter, prezimeParameter, telefonParameter, adresaParameter, gradIDParameter, napomeneParameter, dostavljenoParameter);
        }
    
        public virtual int megakorpa_Narudzba_Obrisi(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_Narudzba_Obrisi", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<megakorpa_NarudzbaProizvod_Prikaz_Result> megakorpa_NarudzbaProizvod_Prikaz(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_NarudzbaProizvod_Prikaz_Result>("megakorpa_NarudzbaProizvod_Prikaz", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<Narudzba> megakorpa_Narudzba_Ucitaj(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("megakorpa_Narudzba_Ucitaj", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<Narudzba> megakorpa_Narudzba_Ucitaj(Nullable<int> narudzbaID, MergeOption mergeOption)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzba>("megakorpa_Narudzba_Ucitaj", mergeOption, narudzbaIDParameter);
        }
    
        public virtual ObjectResult<Drzava> megakorpa_Drzava_PrikazByGradID(Nullable<int> gradID)
        {
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("megakorpa_Drzava_PrikazByGradID", gradIDParameter);
        }
    
        public virtual ObjectResult<Drzava> megakorpa_Drzava_PrikazByGradID(Nullable<int> gradID, MergeOption mergeOption)
        {
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Drzava>("megakorpa_Drzava_PrikazByGradID", mergeOption, gradIDParameter);
        }
    
        public virtual ObjectResult<megakorpa_Proizvod_Prikaz_Result> megakorpa_Proizvod_Prikaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_Proizvod_Prikaz_Result>("megakorpa_Proizvod_Prikaz");
        }
    
        public virtual int megakorpa_NarudzbaProizvod_Insert(Nullable<int> narudzbaID, Nullable<int> proizvodID, Nullable<int> kvantitet, Nullable<decimal> cijena)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kvantitetParameter = kvantitet.HasValue ?
                new ObjectParameter("Kvantitet", kvantitet) :
                new ObjectParameter("Kvantitet", typeof(int));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_NarudzbaProizvod_Insert", narudzbaIDParameter, proizvodIDParameter, kvantitetParameter, cijenaParameter);
        }
    
        public virtual ObjectResult<megakorpa_Proizvod_Cijena_Result> megakorpa_Proizvod_Cijena(Nullable<int> proizvodID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_Proizvod_Cijena_Result>("megakorpa_Proizvod_Cijena", proizvodIDParameter);
        }
    
        public virtual int megakorpa_NarudzbaProizvod_obrisi(Nullable<int> narudzbaProizvodID)
        {
            var narudzbaProizvodIDParameter = narudzbaProizvodID.HasValue ?
                new ObjectParameter("NarudzbaProizvodID", narudzbaProizvodID) :
                new ObjectParameter("NarudzbaProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_NarudzbaProizvod_obrisi", narudzbaProizvodIDParameter);
        }
    
        public virtual int megakorpa_Narudzba_Izmjena(Nullable<int> narudzbaID, Nullable<int> zaposlenikID, Nullable<System.DateTime> datumNarudzbe, Nullable<System.TimeSpan> vrijemeNarudzbe, string ime, string prezime, string telefon, string adresa, Nullable<int> gradID, string napomene, Nullable<bool> dostavljeno)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var zaposlenikIDParameter = zaposlenikID.HasValue ?
                new ObjectParameter("ZaposlenikID", zaposlenikID) :
                new ObjectParameter("ZaposlenikID", typeof(int));
    
            var datumNarudzbeParameter = datumNarudzbe.HasValue ?
                new ObjectParameter("DatumNarudzbe", datumNarudzbe) :
                new ObjectParameter("DatumNarudzbe", typeof(System.DateTime));
    
            var vrijemeNarudzbeParameter = vrijemeNarudzbe.HasValue ?
                new ObjectParameter("VrijemeNarudzbe", vrijemeNarudzbe) :
                new ObjectParameter("VrijemeNarudzbe", typeof(System.TimeSpan));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            var napomeneParameter = napomene != null ?
                new ObjectParameter("Napomene", napomene) :
                new ObjectParameter("Napomene", typeof(string));
    
            var dostavljenoParameter = dostavljeno.HasValue ?
                new ObjectParameter("Dostavljeno", dostavljeno) :
                new ObjectParameter("Dostavljeno", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_Narudzba_Izmjena", narudzbaIDParameter, zaposlenikIDParameter, datumNarudzbeParameter, vrijemeNarudzbeParameter, imeParameter, prezimeParameter, telefonParameter, adresaParameter, gradIDParameter, napomeneParameter, dostavljenoParameter);
        }
    
        public virtual int megakorpa_Proizvod_Insert(Nullable<int> vrstaProizvodaID, Nullable<int> proizvodjacID, string naziv, string opis, string sifra, Nullable<decimal> cijena, Nullable<int> kvantitet)
        {
            var vrstaProizvodaIDParameter = vrstaProizvodaID.HasValue ?
                new ObjectParameter("VrstaProizvodaID", vrstaProizvodaID) :
                new ObjectParameter("VrstaProizvodaID", typeof(int));
    
            var proizvodjacIDParameter = proizvodjacID.HasValue ?
                new ObjectParameter("ProizvodjacID", proizvodjacID) :
                new ObjectParameter("ProizvodjacID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var kvantitetParameter = kvantitet.HasValue ?
                new ObjectParameter("Kvantitet", kvantitet) :
                new ObjectParameter("Kvantitet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_Proizvod_Insert", vrstaProizvodaIDParameter, proizvodjacIDParameter, nazivParameter, opisParameter, sifraParameter, cijenaParameter, kvantitetParameter);
        }
    
        public virtual ObjectResult<megakorpa_Proizvodjac_prikaz_Result> megakorpa_Proizvodjac_prikaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_Proizvodjac_prikaz_Result>("megakorpa_Proizvodjac_prikaz");
        }
    
        public virtual int megakorpa_Proizvod_Izmjena(Nullable<int> proizvodID, Nullable<int> vrstaProizvodaID, Nullable<int> proizvodjacID, string naziv, string opis, string sifra, Nullable<decimal> cijena, Nullable<int> kvantitet)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var vrstaProizvodaIDParameter = vrstaProizvodaID.HasValue ?
                new ObjectParameter("VrstaProizvodaID", vrstaProizvodaID) :
                new ObjectParameter("VrstaProizvodaID", typeof(int));
    
            var proizvodjacIDParameter = proizvodjacID.HasValue ?
                new ObjectParameter("ProizvodjacID", proizvodjacID) :
                new ObjectParameter("ProizvodjacID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var kvantitetParameter = kvantitet.HasValue ?
                new ObjectParameter("Kvantitet", kvantitet) :
                new ObjectParameter("Kvantitet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_Proizvod_Izmjena", proizvodIDParameter, vrstaProizvodaIDParameter, proizvodjacIDParameter, nazivParameter, opisParameter, sifraParameter, cijenaParameter, kvantitetParameter);
        }
    
        public virtual ObjectResult<Proizvod> megakorpa_Proizvod_prikazEdit(Nullable<int> proizvodID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvod>("megakorpa_Proizvod_prikazEdit", proizvodIDParameter);
        }
    
        public virtual ObjectResult<Proizvod> megakorpa_Proizvod_prikazEdit(Nullable<int> proizvodID, MergeOption mergeOption)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvod>("megakorpa_Proizvod_prikazEdit", mergeOption, proizvodIDParameter);
        }
    
        public virtual int megakorpa_Zaposlenik_Insert(Nullable<int> radnoMjestoID, string ime, string prezime, Nullable<System.DateTime> datumRodjenja, string jMBG, string korisnickoIme, string lozinka, string telefon, string eMail, string adresa, Nullable<int> gradID, string napomene)
        {
            var radnoMjestoIDParameter = radnoMjestoID.HasValue ?
                new ObjectParameter("RadnoMjestoID", radnoMjestoID) :
                new ObjectParameter("RadnoMjestoID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var datumRodjenjaParameter = datumRodjenja.HasValue ?
                new ObjectParameter("DatumRodjenja", datumRodjenja) :
                new ObjectParameter("DatumRodjenja", typeof(System.DateTime));
    
            var jMBGParameter = jMBG != null ?
                new ObjectParameter("JMBG", jMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("Lozinka", lozinka) :
                new ObjectParameter("Lozinka", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("EMail", eMail) :
                new ObjectParameter("EMail", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            var napomeneParameter = napomene != null ?
                new ObjectParameter("Napomene", napomene) :
                new ObjectParameter("Napomene", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_Zaposlenik_Insert", radnoMjestoIDParameter, imeParameter, prezimeParameter, datumRodjenjaParameter, jMBGParameter, korisnickoImeParameter, lozinkaParameter, telefonParameter, eMailParameter, adresaParameter, gradIDParameter, napomeneParameter);
        }
    
        public virtual ObjectResult<megakorpa_Zaposlenik_PrikazTabela_Result> megakorpa_Zaposlenik_PrikazTabela()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_Zaposlenik_PrikazTabela_Result>("megakorpa_Zaposlenik_PrikazTabela");
        }
    
        public virtual int megakorpa_Zaposlenik_Izmjeni(Nullable<int> zaposlenikID, Nullable<int> radnoMjestoID, string ime, string prezime, Nullable<System.DateTime> datumRodjenja, string jMBG, string korisnickoIme, string lozinka, string telefon, string eMail, string adresa, Nullable<int> gradID, string napomene)
        {
            var zaposlenikIDParameter = zaposlenikID.HasValue ?
                new ObjectParameter("ZaposlenikID", zaposlenikID) :
                new ObjectParameter("ZaposlenikID", typeof(int));
    
            var radnoMjestoIDParameter = radnoMjestoID.HasValue ?
                new ObjectParameter("RadnoMjestoID", radnoMjestoID) :
                new ObjectParameter("RadnoMjestoID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var datumRodjenjaParameter = datumRodjenja.HasValue ?
                new ObjectParameter("DatumRodjenja", datumRodjenja) :
                new ObjectParameter("DatumRodjenja", typeof(System.DateTime));
    
            var jMBGParameter = jMBG != null ?
                new ObjectParameter("JMBG", jMBG) :
                new ObjectParameter("JMBG", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaParameter = lozinka != null ?
                new ObjectParameter("Lozinka", lozinka) :
                new ObjectParameter("Lozinka", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var eMailParameter = eMail != null ?
                new ObjectParameter("EMail", eMail) :
                new ObjectParameter("EMail", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            var napomeneParameter = napomene != null ?
                new ObjectParameter("Napomene", napomene) :
                new ObjectParameter("Napomene", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_Zaposlenik_Izmjeni", zaposlenikIDParameter, radnoMjestoIDParameter, imeParameter, prezimeParameter, datumRodjenjaParameter, jMBGParameter, korisnickoImeParameter, lozinkaParameter, telefonParameter, eMailParameter, adresaParameter, gradIDParameter, napomeneParameter);
        }
    
        public virtual ObjectResult<Zaposlenik> megakorpa_Zaposlenik_Ucitaj(Nullable<int> zaposlenikID)
        {
            var zaposlenikIDParameter = zaposlenikID.HasValue ?
                new ObjectParameter("ZaposlenikID", zaposlenikID) :
                new ObjectParameter("ZaposlenikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenik>("megakorpa_Zaposlenik_Ucitaj", zaposlenikIDParameter);
        }
    
        public virtual ObjectResult<Zaposlenik> megakorpa_Zaposlenik_Ucitaj(Nullable<int> zaposlenikID, MergeOption mergeOption)
        {
            var zaposlenikIDParameter = zaposlenikID.HasValue ?
                new ObjectParameter("ZaposlenikID", zaposlenikID) :
                new ObjectParameter("ZaposlenikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Zaposlenik>("megakorpa_Zaposlenik_Ucitaj", mergeOption, zaposlenikIDParameter);
        }
    
        public virtual int megakorpa_Zaposlenik_Obrisi(Nullable<int> zaposlenikID)
        {
            var zaposlenikIDParameter = zaposlenikID.HasValue ?
                new ObjectParameter("ZaposlenikID", zaposlenikID) :
                new ObjectParameter("ZaposlenikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_Zaposlenik_Obrisi", zaposlenikIDParameter);
        }
    
        public virtual ObjectResult<megakorpa_Narudzba_PrikazByBrojNarudzbe_Result> megakorpa_Narudzba_PrikazByBrojNarudzbe(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_Narudzba_PrikazByBrojNarudzbe_Result>("megakorpa_Narudzba_PrikazByBrojNarudzbe", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<megakorpa_Narudzba_PrikazByImePrezime_Result> megakorpa_Narudzba_PrikazByImePrezime(string ime, string prezime)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<megakorpa_Narudzba_PrikazByImePrezime_Result>("megakorpa_Narudzba_PrikazByImePrezime", imeParameter, prezimeParameter);
        }
    
        public virtual int megakorpa_Proizvod_Obrisi(Nullable<int> proizvodID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("megakorpa_Proizvod_Obrisi", proizvodIDParameter);
        }
    }
}
